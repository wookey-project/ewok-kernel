library project Libkernel is

   type Build_Size_Type is ("size", "hybrid", "perf");
   Build_Size : Build_Size_Type := external("KERNEL_ADA_BUILDSIZE");

   type Mode_Type is ("debug", "release");
   Mode : Mode_Type := external ("MODE");

   basic :=
     ("-fstack-usage",  -- Generate .su file with informations about the
                        -- amount of stack used
      "-gnateG",        -- Generate preprocessed source
      "-gnatep=" & Libkernel'Project_Dir & "gnatprep.def", -- Preprocessing data file
      "-gnatet=target.atp",
      "-gnatec=" & Libkernel'Project_Dir & "libkernel.adc",
      "-gnatn",         -- Enable pragma Inline
      "-gnatwa",        -- Turn on all warnings
      "-gnatw.X",       -- Turn off warnings for export/import
      "-gnatwe");       -- Treat all warnings as errors

   debug :=
     ("-g",
      "-gnata");        -- Enable pragma Assert | Debug

   verif :=
     ("-gnato");        -- Turn on all checks
--     ("-gnato",         -- Turn on all checks
--      "-gnatVa");       -- Turn on all validity checks

   no_verif :=
     ("-gnatp",         -- Turn off all checks
      "-gnatVn");       -- Turn off all validity checks

   size_switches     := ();
   perf_switches     := ();

   case Build_Size is
      when "size" =>
         size_switches := ("-Os") & basic;
         perf_switches := ("-Os") & basic;
      when "hybrid" =>
         size_switches := ("-Os") & basic;
         perf_switches := ("-O2") & basic;
      when "perf" =>
         size_switches := ("-Os") & basic;
         perf_switches := ("-O3") & basic;
   end case;

   for Languages use ("Ada");

   for Source_Dirs use
     ("src",
      "src/arch/Ada",
      "src/arch/cores/" & external("ARCH"),
      "src/arch/socs/" & external("SOCNAME"),
      "src/arch/socs/" & external("SOCNAME") & "/generated",
      "src/syscalls",
      "src/exported",
      "src/generated");

   for Library_Dir   use external("BUILD_DIR") & "/Ada/lib";
   for Object_Dir    use external("BUILD_DIR") & "/Ada";
   for Target        use external("ADA_ARCH");
   for Runtime ("ada") use external("ADA_PROFILE");
   for Library_Name  use "kernel";
   for Library_Kind  use "static";

   for Library_Interface use
     ("applications",
      "main",
      "ewok",
      "ewok.debug",
      "ewok.devices",
      "ewok.devices.perms",
      "ewok.devices_shared",
      "ewok.dma",
      "ewok.dma_shared",
      "ewok.exported",
      "ewok.exported.devices",
      "ewok.exported.dma",
      "ewok.exported.gpios",
      "ewok.exported.interrupts",
      "ewok.exported.sleep",
      "ewok.exti",
      "ewok.exti.handler",
      "ewok.gpio",
      "ewok.interrupts",
      "ewok.interrupts.handler",
      "ewok.ipc",
      "ewok.isr",
      "ewok.layout",
      "ewok.memory",
      "ewok.mpu",
      "ewok.mpu.handler",
      "ewok.perm",
      "ewok.perm_auto",
      "ewok.rng",
      "ewok.sanitize",
      "ewok.sched",
      "ewok.softirq",
      "ewok.syscalls",
      "ewok.syscalls.cfg",
      "ewok.syscalls.cfg.dev",
      "ewok.syscalls.cfg.gpio",
      "ewok.syscalls.dma",
      "ewok.syscalls.gettick",
      "ewok.syscalls.handler",
      "ewok.syscalls.init",
      "ewok.syscalls.ipc",
      "ewok.syscalls.log",
      "ewok.syscalls.sleep",
      "ewok.syscalls.yield",
      "ewok.syscalls.exiting",
      "ewok.tasks",
      "ewok.tasks.debug",
      "ewok.tasks_shared",
      "ewok.sleep",
      "ewok.posthook",
      "soc.devmap",
      "soc.dma",
      "soc.dma.interfaces",
      "soc.dwt",
      "soc.exti",
      "soc.gpio",
      "soc.gpio.interfaces",
      "soc.interrupts",
      "soc.layout",
      "soc.layout.stm32f42x",
      "soc.layout.stm32f4",
      "soc.nvic",
      "soc.rcc",
      "soc.rng",
      "soc.syscfg",
      "soc.usart",
      "soc.usart.interfaces",
      "soc",
      "m4.cpu",
      "m4.cpu.instructions",
      "m4.layout",
      "m4.mpu",
      "m4.scb",
      "m4.systick",
      "m4",
      "types",
      "types.c",
      "processor",
      "rings",
      "sections");


   Local_Path := ".";

   package Compiler is

      case Mode is
         when "debug" =>
            for Default_Switches ("ada") use size_switches & debug & verif;
            for Switches ("ewok-sched.adb")              use perf_switches & debug & verif;
            for Switches ("ewok-tasks.adb")              use perf_switches & debug & verif;
            for Switches ("ewok-interrupts-handler.adb") use perf_switches & debug & verif;
            for Switches ("ewok-syscalls-handler.adb")   use perf_switches & debug & verif;
            for Switches ("ewok-syscalls-ipc.adb")       use perf_switches & debug & verif;
            for Switches ("ewok-isr.adb")                use perf_switches & debug & verif;
            for Switches ("ewok-posthook.adb")           use perf_switches & debug & verif;
            for Switches ("ewok-softirq.adb")            use perf_switches & debug & verif;
            for Switches ("soc-nvic.adb")                use perf_switches & debug & verif;
            for Switches ("soc-dma.adb")                 use perf_switches & debug & verif;
            for Switches ("soc-gpio.adb")                use perf_switches & debug & verif;
            for Switches ("soc-gpio-interfaces.adb")     use perf_switches & debug & verif;
         when "release" =>
            for Default_Switches ("ada") use size_switches & verif;
            for Switches ("ewok-sched.adb")              use perf_switches & verif;
            for Switches ("ewok-tasks.adb")              use perf_switches & verif;
            for Switches ("ewok-interrupts-handler.adb") use perf_switches & verif;
            for Switches ("ewok-syscalls-handler.adb")   use perf_switches & verif;
            for Switches ("ewok-syscalls-ipc.adb")       use perf_switches & verif;
            for Switches ("ewok-isr.adb")                use perf_switches & verif;
            for Switches ("ewok-posthook.adb")           use perf_switches & verif;
            for Switches ("ewok-softirq.adb")            use perf_switches & verif;
            for Switches ("soc-nvic.adb")                use perf_switches & verif;
            for Switches ("soc-dma.adb")                 use perf_switches & verif;
            for Switches ("soc-gpio.adb")                use perf_switches & verif;
            for Switches ("soc-gpio-interfaces.adb")     use perf_switches & verif;
            -- Proved SPARK code
            for Switches ("ewok-perm.adb")               use perf_switches & no_verif;
            for Switches ("soc-interrupts.adb")          use perf_switches & no_verif;
            for Switches ("m4-mpu.adb")                  use perf_switches & no_verif;
            for Switches ("m4-cpu.adb")                  use perf_switches & no_verif;
            for Switches ("m4-cpu-instructions.adb")     use perf_switches & no_verif;
            for Switches ("m4-systick.adb")              use perf_switches & no_verif;
            for Switches ("soc-dwt.adb")                 use perf_switches & no_verif;
            for Switches ("m4-scb.adb")                  use perf_switches & no_verif;
            -- Debugging / error handling code
            for Switches ("ewok-tasks-debug.adb")        use size_switches & no_verif;
            for Switches ("ewok-debug.adb")              use size_switches & no_verif;
            for Switches ("ewok-mpu-handler.adb")        use size_switches & no_verif;
      end case;

   end Compiler;


   package Binder is
      for Default_Switches ("ada") use ("-n");
   end Binder;

end Libkernel;

